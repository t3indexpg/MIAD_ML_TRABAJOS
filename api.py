# -*- coding: utf-8 -*-
"""Api.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1fLWTv9EircoE0Khd-_o-7YwZss44z-G5
"""

#!/usr/bin/python
from flask import Flask
from flask_restx import Api, Resource, fields
import joblib
import pandas as pd

# Cargar el modelo entrenado
modelo = joblib.load('modelo_lr.pkl')

# Variables que usa el modelo
selected_features = [
    'acousticness',
    'danceability',
    'energy',
    'loudness',
    'instrumentalness',
]

# Crear la app
app = Flask(__name__)
api = Api(app, version='1.0', title='Spotify Popularity API', description='Predice la popularidad de una canción')

# Crear namespace
ns = api.namespace('predict', description='Predicción de popularidad')

# Definir el modelo de entrada
input_model = api.model('InputData', {
    'acousticness': fields.Float(required=True, description='Acousticness de la canción'),
    'danceability': fields.Float(required=True, description='Danceability de la canción'),
    'energy': fields.Float(required=True, description='Energy de la canción'),
    'loudness': fields.Float(required=True, description='Loudness de la canción'),
    'instrumentalness': fields.Float(required=True, description='Instrumentalness de la canción'),
})

# Definir el modelo de respuesta
response_model = api.model('Prediction', {
    'predicted_popularity': fields.Float,
})

@ns.route('/')
class PopularityPredictor(Resource):
    @api.expect(input_model)
    @api.marshal_with(response_model)
    def post(self):
        data = api.payload

        # Convertir a DataFrame
        X_new = pd.DataFrame([data], columns=selected_features)

        # Hacer la predicción
        pred = modelo.predict(X_new)[0]

        return {'predicted_popularity': pred}

if __name__ == '__main__':
    app.run(debug=True, host='0.0.0.0', port=5000)


